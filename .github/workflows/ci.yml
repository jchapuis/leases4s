name: CI
on:
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Create Kube Cluster"
        uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: "local"
          args: >-
            -p "8080:80@loadbalancer"
      - name: Start Kubernetes Logs
        uses: dashanji/kubernetes-log-export-action@v6
        env:
          SHOW_TIMESTAMPS: 'true'
          OUTPUT_DIR: ${{ github.workspace }}/logs
          NAMESPACES: "default"
          MODE: start
      - name: Start AWS LocalStack
        uses: LocalStack/setup-localstack@main
        with:
          image-tag: 'latest'
          install-awslocal: 'true'
      - name: "Checkout"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: "Setup Coursier"
        uses: coursier/setup-action@v1.3.3
        with:
          jvm: temurin:17
          apps: sbt
      - name: "Compile and unit test libraries"
        run: sbt +  versionPolicyCheck compile coverage "project core" test coverageReport "project patterns" test coverageReport
      - name: "Build docker example image"
        run: sbt "project example" jibDockerBuild
      - name: "Sleep for a bit for docker registry to be ready"
        run: sleep 10
      - name: "Import example docker image in k3d"
        run: k3d image import localhost/io.github.jchapuis/leases4s-example:local -c local
      - name: "Install besom plugin"
        run: pulumi plugin install language scala 0.3.2 --server github://api.github.com/VirtusLab/besom
      - name: "Install pulumilocal (wrapper script for pulumi using AWS LocalStack)"
        run: pip install pulumi-local
      - name: "Deploy example app"
        run: cd deployer; pulumi login --local; export PULUMI_CONFIG_PASSPHRASE=foobar; pulumi stack init example; pulumilocal up --stack example --yes --emoji --logtostderr --logflow
      - name: "Sleep for a bit for the application to be ready"
        run: sleep 30
      - name: "Test example app"
        run: sbt "project example" coverage test coverageReport
      - name: "Coverage aggregate"
        run: sbt coverageAggregate
      - name: "Upload coverage"
        uses: codecov/codecov-action@v3
      - name: Dump Kubernetes Logs
        uses: dashanji/kubernetes-log-export-action@v6
        if: always()
        env:
          SHOW_TIMESTAMPS: 'true'
          OUTPUT_DIR: ${{ github.workspace }}/logs
          NAMESPACES: "default"
          MODE: stop
      - name: Run Stoat Action
        uses: stoat-dev/stoat-action@v0
        if: always()